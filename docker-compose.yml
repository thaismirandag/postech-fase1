services:
  app:
    build: 
      context: ./backend
      dockerfile: ${DOCKERFILE:-Dockerfile}
    volumes:
      - ${VOLUME_MOUNT:-./backend:/app}
    ports:
      - "${APP_PORT:-8000}:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
    restart: ${RESTART_POLICY:-no}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
