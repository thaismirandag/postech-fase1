# Multi-stage build para otimização máxima
FROM python:3.11-slim as base

# Instalar dependências do sistema e criar usuário não-root
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r appuser && useradd -r -g appuser appuser

# Instalar Poetry
RUN pip install --no-cache-dir poetry==1.7.1

# Configurar Poetry para não criar ambiente virtual
RUN poetry config virtualenvs.create false

# Stage de dependências
FROM base as deps

# Copiar apenas arquivos de dependências para cache
COPY pyproject.toml poetry.lock ./

# Instalar dependências de produção
RUN poetry install --only=main --no-dev --no-interaction

# Stage de build da aplicação
FROM base as builder

# Copiar dependências do stage anterior
COPY --from=deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=deps /usr/local/bin /usr/local/bin

# Copiar código da aplicação
WORKDIR /app
COPY src/ ./src/
COPY alembic/ ./alembic/
COPY alembic.ini ./

# Verificar sintaxe e imports
RUN python -m py_compile src/main.py
RUN python -c "import src.main"

# Stage de produção final
FROM python:3.11-slim as production

# Instalar apenas dependências de runtime necessárias
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r appuser && useradd -r -g appuser appuser

# Copiar dependências e aplicação do builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app /app

# Mudar para diretório da aplicação
WORKDIR /app

# Mudar propriedade para usuário não-root
RUN chown -R appuser:appuser /app
USER appuser

# Configurar variáveis de ambiente
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Expor porta
EXPOSE 8000

# Health check otimizado
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Comando para executar a aplicação com otimizações
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"] 